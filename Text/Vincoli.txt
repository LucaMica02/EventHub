EVENT
    - startBooking > now [TRIGGER] *
    - endBooking > startBooking *
    - endEvent > startEvent *
    - startEvent > endBooking *
    - Event [Complete and Disjoint] [TRIGGER] *
        (INSERT)
            1 - Deve esistere in online o in inperson
            2 - Non deve esistere in entrambi
    - creator is a creator [TRIGGER] *
    - update <--> now < endBooking Stato [TRIGGER] *
        [INSERT | UPDATE]
        Open <-->  endBooking >= now >= startBooking and Registrati < maxPeople
        Closed <--> endBooking >= now >= startBooking and Registrati == maxPeople
                    or 
                    not (endBooking >= now >= startBooking)
        Finished <--> now > endEvent
        Canceled <--> True

FEEDBACK 
    - User partecipated at the event --> EventState == Finished [TRIGGER] *


USEREVENT
    - Cancellazione o Inserimento evento 
        --> eventState = now() between startBooking and endBooking *
    - UserEvent not a creator [TRIGGER] *
    - Count Event < Event.maxPeople * 

Operazioni:

GETRANK
    - At least one feedback required

FEEDBACK 
    - User partecipated at the event --> EventState == Finished [TRIGGER]

REGISTER TO THE EVENT
    - Curr user < max user